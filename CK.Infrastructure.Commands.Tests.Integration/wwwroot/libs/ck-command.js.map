{"version":3,"sources":["webpack:///webpack/bootstrap ebb012e95e3af04470b8","webpack:///./ts/command.ts","webpack:///./ts/src/Command.ts","webpack:///./ts/src/AjaxSender.ts","webpack:///./ts/src/Abstraction.ts","webpack:///./ts/src/listeners/HttpListener.ts","webpack:///./ts/src/listeners/ResponseListener.ts","webpack:///./ts/src/CommandEmitter.ts","webpack:///./ts/src/listeners/SignalRListener.ts","webpack:///./ts/src/listeners/HubListener.ts","webpack:///./ts/src/Main.ts"],"names":[],"mappings":"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","file":"ck-command.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ebb012e95e3af04470b8\n **/","export * from './src/Command';\r\nexport * from './src/AjaxSender';\r\nexport * from './src/CommandEmitter';\r\nexport * from './src/Abstraction';\r\nexport * from './src/listeners/SignalRListener';\r\nexport * from './src/listeners/HttpListener';\r\nexport * from './src/listeners/HubListener';\r\nexport * from './src/Main';\n\n\n/** WEBPACK FOOTER **\n ** ./ts/command.ts\n **/","export class Command {\r\n    name: string;\r\n    properties: any;\r\n    \r\n    constructor(name: string, properties: {}){\r\n        this.name = name;\r\n        this.properties = properties;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/Command.ts\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nimport { ICommandRequestSender, CommandResponse } from \"./Abstraction\";\r\nimport {Command}  from \"./Command\";\r\n\r\nimport{HttpListener} from './listeners/HttpListener'\r\n\r\nexport class AjaxSender implements ICommandRequestSender {\r\n    constructor();\r\n    constructor(listener: HttpListener)\r\n    constructor(private _listener?: HttpListener){\r\n        if(this._listener == undefined){\r\n            this._listener = new HttpListener();\r\n        }\r\n    }\r\n    \r\n    send(url: string, command: Command) {\r\n        var json = JSON.stringify(command.properties);\r\n        \r\n        return new Promise<any>((resolve, reject) =>{\r\n            $.ajax(url, {\r\n                type: 'POST',\r\n                data: json,\r\n                contentType: 'application/json',\r\n                dataType: 'JSON'\r\n            }).then((data) => {\r\n                var resp = new CommandResponse(data, command.name);\r\n                \r\n                if(resp.responseType == 0){\r\n                    this.notifyListener(resp);\r\n                }\r\n                \r\n                return resp;\r\n            }, reject);\r\n        }) \r\n    }\r\n    \r\n    private notifyListener(resp){\r\n        if(this._listener != undefined){\r\n            setTimeout(() => this._listener.notify(resp), 5);\r\n        }\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/AjaxSender.ts\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\r\nimport { Command } from \"./Command\";\r\n\r\nexport class CommandResponse {\r\n    private static commandNames: {[commandId:string]: string} = {};\r\n    \r\n    commandName: string;\r\n    \r\n    /**\r\n    * The identifier of the command. \r\n    */\r\n    commandId: string;\r\n    /**\r\n    * The payload of the result. *\r\n    */\r\n    payload: any;\r\n    \r\n    /**\r\n     * Type of the response\r\n     */\r\n    responseType: Number;\r\n    \r\n    constructor(data: any);\r\n    constructor(data: any, commandName: string);\r\n    constructor(data: any, commandName?: string){\r\n        this.responseType = data.responseType;\r\n        this.payload = data.payload;\r\n        this.commandId = data.commandId;\r\n        \r\n        if(commandName){\r\n            CommandResponse.commandNames[this.commandId] = commandName;\r\n            this.commandName = commandName;\r\n        } else{\r\n            this.commandName = CommandResponse.commandNames[this.commandId];\r\n        }\r\n        \r\n        if(!this.commandName){\r\n            throw `The command name cannot be resolved for the commandId ${this.commandId}`;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * The CommandEmitter is responsible to send command to the remote server\r\n */\r\nexport interface ICommandEmitter {\r\n    /**\r\n     * The base uri for the command requests\r\n     */\r\n    uriBase: string,\r\n    /**\r\n     * Send the command to the server\r\n     * @param The command to send\r\n     */\r\n    emit(command: Command): Promise<CommandResponse>;\r\n}\r\n\r\n/**\r\n * Allow you to register for the command responses\r\n */\r\nexport interface ICommandResponseListener {\r\n    \r\n    \r\n    callbackId: string;\r\n    \r\n    /**\r\n     * register a response listener for the specified command execution\r\n     * @param commandId The commandId of the command   \r\n     */\r\n    on(commandName: string, commandId: string, callback: (response: CommandResponse) => void);\r\n    \r\n    /**\r\n     * Register a response listener for all specified command exections\r\n     */\r\n    on(commandName: string, callback: (response: CommandResponse) => void);\r\n    \r\n    /**\r\n     * remove a response listener previously added with on method\r\n     */\r\n    off(commandName: string, callback: (response: CommandResponse) => void);\r\n    off(commandName: string, commandId: string, callback: (response: CommandResponse) => void);\r\n}\r\n\r\nexport interface ICommandRequestSender {\r\n    send: (endpoint: string, command: Command) => Promise<any>;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/Abstraction.ts\n **/","import { ResponseListener } from \"./ResponseListener\";\r\n\r\nexport class HttpListener extends ResponseListener{\r\n    constructor(){\r\n        super();\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/listeners/HttpListener.ts\n **/","import { ICommandEmitter, ICommandResponseListener, ICommandRequestSender, CommandResponse } from \"../Abstraction\";\r\nimport { AjaxSender } from \"../AjaxSender\";\r\n\r\nexport abstract class ResponseListener implements ICommandResponseListener{\r\n    callbackId: string = \"\";\r\n    \r\n    protected _listeners: {[commandName:string]: {[commandId:string]: Array<(response: CommandResponse) => void>}} = {};\r\n    \r\n    constructor(){}\r\n    \r\n    notify(response: CommandResponse){\r\n        for(var commandName in this._listeners){\r\n            var idListeners = this._listeners[commandName][response.commandId];\r\n            var listeners = this._listeners[commandName][commandName];\r\n            \r\n            this.executeCallbacks(idListeners, response);\r\n            this.executeCallbacks(listeners, response);\r\n            \r\n            //unregister callbacks for the commandId\r\n            delete this._listeners[commandName][response.commandId];\r\n        }\r\n    }\r\n    \r\n    on(commandName: string, callback: (response: CommandResponse) => void)\r\n    on(commandName: string, commandId: string, callback: (response: CommandResponse) => void);\r\n    on(commandName: string, commandIdOrCallback:any,callback?: (response: CommandResponse) => void){\r\n        var commandId = typeof(commandIdOrCallback) == 'string' ? <string>commandIdOrCallback : commandName;\r\n        callback = callback || commandIdOrCallback;\r\n        \r\n        if(this._listeners[commandName] == undefined){\r\n            this._listeners[commandName] = {};\r\n            this._listeners[commandName][commandId] = [];\r\n        }\r\n        \r\n        this._listeners[commandName][commandId].push(callback);\r\n    }\r\n    \r\n    off(commandName: string, callback: (response: CommandResponse) => void);\r\n    off(commandName: string, commandId: string, callback: (response: CommandResponse) => void);\r\n    off(commandName: string, commandIdOrCallback:any,callback?: (response: CommandResponse) => void){\r\n        var commandId = typeof(commandIdOrCallback) == 'string' ? <string>commandIdOrCallback : commandName;\r\n        callback = callback || commandIdOrCallback;\r\n        \r\n        var listeners = this._listeners[commandName][commandId];\r\n        var i = listeners.indexOf(callback);\r\n        listeners.splice(i, 1);\r\n    }\r\n    \r\n    private executeCallbacks(callbacks: Array<(response: CommandResponse) => void>, response: CommandResponse){\r\n        if(callbacks){\r\n            callbacks.forEach( cb => cb(response));\r\n        }\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/listeners/ResponseListener.ts\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nimport { ICommandEmitter, ICommandRequestSender, CommandResponse } from \"./Abstraction\";\r\nimport { HubListener } from \"./listeners/HubListener\";\r\n\r\nimport { Command }  from \"./Command\";\r\n\r\nexport class CommandEmitter implements ICommandEmitter {\r\n    private _sender: ICommandRequestSender;\r\n    private _listener: HubListener;\r\n    \r\n    constructor(public uriBase: string, commandRequestSender: ICommandRequestSender, hubListener: HubListener) {\r\n        this._sender = commandRequestSender;\r\n        this._listener = hubListener;\r\n    }\r\n\r\n    public emit(command: Command): Promise<CommandResponse> {\r\n        console.info('Sending Command : ' + command.name );\r\n        var url = this.uriBase + '/' + command.name + '?c=' + (this._listener ? this._listener.callbackId : '');\r\n        var self = this;\r\n        return new Promise<CommandResponse>((resolve, reject) =>{\r\n            self._sender.send(url, command).then((resp: CommandResponse) => {\r\n                self._listener.on(command.name, resp.commandId, (data) =>{\r\n                    resolve(data);\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/CommandEmitter.ts\n **/","/// <reference path=\"../../../typings/tsd.d.ts\" />\r\nimport { ICommandEmitter, ICommandResponseListener, ICommandRequestSender, CommandResponse } from \"../Abstraction\";\r\nimport { ResponseListener} from \"./ResponseListener\";\r\n\r\nexport class SignalRListener extends ResponseListener {\r\n\r\n    constructor(private _hubConnection: HubConnection, hubName: string) {\r\n        super();\r\n        \r\n        this._hubConnection.proxies[hubName].client.ReceiveCommandResponse = data => this.notify(new CommandResponse(data));\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/listeners/SignalRListener.ts\n **/","import {ResponseListener} from './ResponseListener';\r\nimport {HttpListener} from './HttpListener';\r\nimport {SignalRListener} from './SignalRListener';\r\nimport {ICommandResponseListener, CommandResponse} from \"../Abstraction\";\r\n\r\nexport class HubListener implements ICommandResponseListener{\r\n    \r\n    constructor();\r\n    constructor(httpListener: HttpListener);\r\n    constructor(httpListener: HttpListener, signalRListener: SignalRListener );\r\n    constructor(private _http?: HttpListener, private _ws?: SignalRListener) {\r\n        if(!this._http){\r\n            this._http = new HttpListener();\r\n        }\r\n    }\r\n    \r\n    get callbackId(): string{\r\n        return this._ws ? this._ws.callbackId : \"\";\r\n    }\r\n    \r\n    on(commandName: string, callback: (response: CommandResponse) => void);\r\n    on(commandName: string, commandId: string, callback: (response: CommandResponse) => void);\r\n    on(commandName: string, commandIdOrCallback:any,callback?: (response: CommandResponse) => void){\r\n        this._http.on(commandName, commandIdOrCallback, callback);\r\n        if(this._ws){\r\n            this._ws.on(commandName, commandIdOrCallback, callback);\r\n            //TODO: delete callback if called via the other lsitener\r\n            \r\n            // if(typeof(commandIdOrCallback) == 'string'){\r\n            //     this._http.on(commandName, commandIdOrCallback, (resp) =>{\r\n            //         this._ws.off(commandName, commandIdOrCallback, callback);\r\n            //     });\r\n            // }\r\n        }\r\n    }\r\n    \r\n    off(commandName: string, callback: (response: CommandResponse) => void);\r\n    off(commandName: string, commandId: string, callback: (response: CommandResponse) => void);\r\n    off(commandName: string, commandIdOrCallback:any, callback?: (response: CommandResponse) => void){\r\n        this._http.off(commandName,commandIdOrCallback, callback);\r\n        if(this._ws){\r\n            this._ws.off(commandName,commandIdOrCallback, callback);\r\n        }\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/listeners/HubListener.ts\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nimport {ICommandEmitter,ICommandResponseListener, CommandResponse} from './Abstraction';\r\nimport {Command} from './Command';\r\nimport {CommandEmitter} from './CommandEmitter';\r\nimport {AjaxSender} from './AjaxSender';\r\nimport {SignalRListener} from './listeners/SignalRListener';\r\n\r\nvar _emitters: Array<ICommandEmitter> = new Array<ICommandEmitter>();\r\n\r\n    \r\nexport var findEmitter = function(uriBase: string): ICommandEmitter{\r\n    return _emitters.filter( t => t.uriBase === uriBase )[0];\r\n}\r\n\r\nexport var sendCommand = function(uriBase: string, name: string, properties: any): Promise<CommandResponse>{\r\n    var cmd =  new Command(name,properties);\r\n\r\n    var emitter = findEmitter( uriBase );\r\n    if( emitter == null ){\r\n        var listener = null;\r\n        if($ && $.connection) {\r\n            listener = new SignalRListener($.connection.hub, 'crs'+ uriBase)\r\n        }\r\n        emitter = new CommandEmitter( uriBase, new AjaxSender(), listener );\r\n        _emitters.push( emitter);\r\n    }\r\n    \r\n    return emitter.emit(cmd);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/src/Main.ts\n **/"],"sourceRoot":""}